ext.useWpiUtil = { project ->
    project.tasks.create(name: "downloadWpiUtil") {
        description = 'Downloads the wpiutil maven dependency.'
        group = 'WPILib'
        def depFolder = "${project.buildDir}/dependencies"
        def utilZip = file("${depFolder}/wpiutil.zip")
        outputs.file(utilZip)
        def wpiUtil

        doFirst {
            def wpiUtilDependency
            wpiUtilDependency = project.dependencies.create("edu.wpi.first.wpilib:wpiutil:+:${project.classifier}@zip")
             
            def wpiUtilConfig = project.configurations.detachedConfiguration(wpiUtilDependency)
            wpiUtilConfig.setTransitive(false)
            wpiUtil = wpiUtilConfig.files[0].canonicalFile
        }

        doLast {
            copy {
                from wpiUtil
                rename 'wpiutil(.+)', 'wpiutil.zip'
                into depFolder
            }
        }
    }

    def wpiUtilUnzipLocation = "${project.buildDir}/wpiutil"

    // Create a task that will unzip the wpiutil files into a temporary build directory
    project.tasks.create(name: "unzipWpiUtil", type: Copy) {
        description = 'Unzips the wpiutil maven dependency so that the include files and libraries can be used'
        group = 'WPILib'
        dependsOn project.tasks.downloadWpiUtil
        from zipTree(project.tasks.downloadWpiUtil.outputs.files.singleFile)
        into wpiUtilUnzipLocation
    }

    project.ext.wpiUtil = wpiUtilUnzipLocation
    project.ext.wpiUtilInclude = "$wpiUtilUnzipLocation/include"

    project.ext.addWpiUtilStaticLibraryLinks = { compileTask, linker, binary ->
        compileTask.dependsOn project.tasks.unzipWpiUtil
        String path = project.getPlatformPath(binary)
        if (binary.targetPlatform.operatingSystem.windows) {
            linker.args "${project.wpiUtil}/${path}/wpiutil.lib"
        } else {
            linker.args "${project.wpiUtil}/${path}/libwpiutil.a"
        }
    }
    
    project.ext.addWpiUtilSharedLibraryLinks = { compileTask, linker, binary ->
        compileTask.dependsOn project.tasks.unzipWpiUtil
        String path = project.getPlatformPath(binary)
        if (binary.targetPlatform.operatingSystem.windows) {
            linker.args "${project.wpiUtil}/${path}/wpiutil.dll"
        } else {
            linker.args "${project.wpiUtil}/${path}/libwpiutil.so"
        }
    }
}